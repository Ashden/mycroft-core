# This workflow will install Python dependencies, run tests and lint with all supported versions of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Myroft Core CI

on:
  push:
    branches: [ test-github-actions ]
  pull_request:
    branches: [ dev ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Cache pip packages
      uses: actions/cache@v2
      env:
        cache-name: cache-pypi-modules
      with:
        # pip cache files are stored in `~/.cache/pip` on Linux
         path: ~/.cache/pip
         key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('requirements/requirements.txt', 'requirements/tests.txt') }}
         restore-keys: |
           ${{ runner.os }}-build-${{ env.cache-name }}-
           ${{ runner.os }}-build-
           ${{ runner.os }}-
    - name: Install apt dependencies
      run: |
        sudo apt-get update -qq
        # sudo apt-get install -qq mpg123 portaudio19-dev libglib2.0-dev swig bison libtool autoconf libglib2.0-dev libicu-dev libfann-dev coreutils
        # sudo apt-get install -y gcc-4.8 g++-4.8
    - name: Install test dependencies
      run: pip install -r requirements/tests.txt
    - name: Run dev_setup script
      run: |
        if [[ ${{ matrix.python-version }} == 3.9 ]]; then VIRTUALENV_ROOT=${VIRTUAL_ENV} ./dev_setup.sh; fi
        # Skip mimic build for other versions because they should not differ
        if [[ ${{ matrix.python-version }} != 3.9 ]]; then VIRTUALENV_ROOT=${VIRTUAL_ENV} ./dev_setup.sh -sm; fi
      env:
        CC: gcc-4.8
        CI: true
    - name: Linting and formatting
      run: |
        pycodestyle mycroft test
        flake8 mycroft test --count --select=E9,F63,F7,F82 --show-source --statistics
    - name: Run the unit tests
      run: |
        # Only generate the html report for one of the versions, other should not differ
        if [[ ${{ matrix.python-version }} == 3.9 ]]; then ./start-mycroft.sh unittest --cov-report html; fi
        if [[ ${{ matrix.python-version }} != 3.9 ]]; then ./start-mycroft.sh unittest; fi
    - name: Upload code coverage
      run: if [[ ${{ matrix.python-version }} == 3.9 ]]; then bash <(curl -s https://codecov.io/bash); fi
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
